---
import Dots from "@/assets/Dots.astro";
import { rgbToCmyk, rgbToHex } from "@/lib/colors";

const { id, name, rgb } = Astro.props;
const rgbOut = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;
const hexOut = rgbToHex(rgb);
const cmykOut = rgbToCmyk(rgb);
---

<article
  id={id}
  class="flex w-full flex-col rounded-md border border-neutral-900/80 bg-white p-2 shadow"
>
  <button
    style={`background-color: ${rgbOut}`}
    class="aspect-square w-full rounded border border-neutral-800/10"
  >
  </button>

  <aside class="mt-3 flex w-full flex-col text-left text-neutral-800">
    <header class="w-full">
      <h2 class="font-bold">{name}</h2>
    </header>

    <main class="relative flex w-full flex-col justify-center">
      <select
        id="colorspace_selector"
        class="w-full appearance-none py-2 text-xs outline-none"
      >
        <optgroup label="RGB" class="bg-black text-neutral-50">
          <option value="rgb">{rgbOut}</option>
        </optgroup>

        <optgroup label="Hexadecimal" class="bg-black text-neutral-50">
          <option value="hex">{hexOut}</option>
        </optgroup>

        <optgroup label="CMYK" class="bg-black text-neutral-50">
          <option value="cmyk">{cmykOut}</option>
        </optgroup>
      </select>

      <Dots
        class="pointer-events-none absolute right-0 size-4 text-neutral-400"
      />
    </main>
  </aside>
</article>

<script type="module" define:vars={{ id }} is:inline>
  import { loadColorSpace, saveColorSpace } from "./src/lib/utils";

  const card = document.querySelector(`#${id}`);
  const select = card.querySelector("select");

  select.value = loadColorSpace();

  select.addEventListener("change", () => {
    console.log(select.value);

    saveColorSpace(select.value);
  });
</script>
